/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        semicolon {
            bindings = <&kp SEMI>;
            key-positions = <47 46>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   |   \   |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                                                        &kp N6         &kp N7  &kp N8        &kp N9   &kp N0     &kp MINUS
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                                                         &kp Y          &kp U   &kp I         &kp O    &kp P      &kp LBKT
&kp LCTRL  &kp A   &kp S   &kp D     &kp F     &kp G                                                         &kp H          &kp J   &kp K         &kp L    &kp COLON  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V     &kp B         &kp EQUAL               &kp RBKT                &kp N          &kp M   &kp COMMA     &kp DOT  &kp FSLH   &kp RSHIFT
                           &kp LALT  &kp LGUI  &lt 2 ESCAPE  &mt LEFT_SHIFT SPACE    &mt RIGHT_SHIFT RETURN  &kp BACKSPACE  &sl 1   &kp LEFT_ALT
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1  &kp F2           &kp F3       &kp F4                &kp F5                 &kp F6                       &kp F7     &kp F8        &kp F9        &kp F10       &kp F11         &kp F12
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE                     &kp PLUS   &kp N7        &kp N8        &kp N9        &kp ASTERISK    &trans
&trans  &kp HASH         &kp DOLLAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE                    &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp UNDERSCORE  &trans
&trans  &kp PERCENT      &kp CARET    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE  &trans    &trans  &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH   &trans
                                      &trans                &trans                 &trans     &trans    &trans  &trans     &trans        &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   | Mute |  Vol- |  Vol+ |  |>  |       |  HOME |
            // |       |     |     |      |      |      |                   |      |       |   ^   |      |       |  END  |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ->  |       | PG_UP |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   | PG_DO |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &kp C_MUTE            &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &kp C_BRI_UP          &kp HOME
&trans      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                          &kp C_AC_SCROLL_UP    &kp K_FORWARD      &kp UP_ARROW     &kt K_BACK        &kp C_BRIGHTNESS_DEC  &kp END
&trans      &kp F6        &kp F7        &kp F8        &kp F9        &kp F10                         &kp C_AC_SCROLL_DOWN  &kp LEFT           &kp DOWN         &kp RIGHT         &kp INSERT            &kp PG_UP
&trans      &kp F11       &kp F12       &kp F10       &kp F11       &kp F12       &trans    &trans  &trans                &trans             &trans           &trans            &kp DELETE            &kp PG_DN
                                        &trans        &trans        &trans        &trans    &trans  &trans                &out OUT_USB       &out OUT_BLE
            >;
        };
    };
};

