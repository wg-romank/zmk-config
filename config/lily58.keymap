/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt { flavor = "tap-preferred"; };

&lt { flavor = "hold-preferred"; };

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        curly: curly {
            compatible = "zmk,behavior-mod-morph";
            label = "CURLY";
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        round: round {
            compatible = "zmk,behavior-mod-morph";
            label = "ROUND";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        square: square {
            compatible = "zmk,behavior-mod-morph";
            label = "SQUARE";
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        hp: hp {
            compatible = "zmk,behavior-hold-tap";
            label = "HP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        lock: lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(Q))>;
            label = "LOCK";
        };

        prscr: prscr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(NUMBER_4)) &kp PRINTSCREEN>;
            label = "PRSCR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4        &kp N5                                                        &kp N6           &kp N7         &kp N8        &kp N9   &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W   &kp E     &kp R         &kp T                                                         &kp Y            &kp U          &kp I         &kp O    &kp P     &kp LBKT
&kp LCTRL  &kp A   &kp S   &kp D     &kp F         &kp G                                                         &kp H            &mt RGUI J     &kp K         &kp L    &kp SEMI  &kp SQT
&to 1      &kp Z   &kp X   &kp C     &kp V         &kp B         &lock                   &prscr                  &kp N            &kp M          &kp COMMA     &kp DOT  &kp FSLH  &kp RSHIFT
                           &kp LALT  &hp LGUI TAB  &lt 2 ESCAPE  &mt LEFT_SHIFT SPACE    &mt RIGHT_SHIFT RETURN  &lt 1 BACKSPACE  &hp RCTRL TAB  &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp TAB LS(TAB)>;
        };

        lower_layer {
            bindings = <
&kp F1  &kp F2           &kp F3       &kp F4   &kp F5     &kp F6                         &kp F7     &kp F8        &kp F9        &kp F10       &kp F11         &kp F12
&trans  &kp EXCLAMATION  &kp AT_SIGN  &curly   &kp AMPS   &kp PIPE                       &kp PLUS   &kp N7        &kp N8        &kp N9        &kp ASTERISK    &trans
&trans  &kp HASH         &kp DOLLAR   &round   &kp EQUAL  &kp GRAVE                      &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp UNDERSCORE  &trans
&to 2   &kp PERCENT      &kp CARET    &square  &kp COLON  &kp TILDE  &trans      &trans  &kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH   &trans
                                      &trans   &trans     &trans     &kp LALT    &trans  &trans     &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(R) LC(LS(R))>;
        };

        raise_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &kp C_MUTE            &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &kp C_BRI_UP          &kp HOME
&trans      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                          &kp C_AC_SCROLL_UP    &kp C_AC_FORWARD   &kp UP_ARROW     &kt C_AC_BACK     &kp C_BRIGHTNESS_DEC  &kp END
&trans      &kp F6        &kp F7        &kp F8        &kp F9        &kp F10                         &kp C_AC_SCROLL_DOWN  &kp LEFT           &kp DOWN         &kp RIGHT         &trans                &kp PG_UP
&to 0       &kp F11       &kp F12       &kp F10       &kp F11       &kp F12       &trans    &trans  &trans                &trans             &trans           &trans            &trans                &kp PG_DN
                                        &trans        &trans        &trans        &trans    &trans  &kp BACKSPACE         &out OUT_USB       &out OUT_BLE
            >;
        };
    };
};

